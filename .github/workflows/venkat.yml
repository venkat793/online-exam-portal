name: Push the Docker image to AWS ECR Repo
on:
  push:
    branches:
      - dev

jobs:
  Build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Get commit hash
        id: get-commit-hash
        run: echo "::set-output name=commit-hash::$(git rev-parse --short HEAD)"

      - name: Get timestamp
        id: get-timestamp
        run: echo "::set-output name=timestamp::$(date +'%Y-%m-%d-%H-%M')"

      - name: Detect changed directory
        id: detect-changes
        run: |
          if git diff --name-only HEAD^ HEAD | grep -q '^backend/'; then
            echo "directory=backend" >> $GITHUB_ENV
          elif git diff --name-only HEAD^ HEAD | grep -q '^frontend/'; then
            echo "directory=frontend" >> $GITHUB_ENV
          elif git diff --name-only HEAD^ HEAD | grep -q '^user-frontend/'; then
            echo "directory=user-frontend" >> $GITHUB_ENV
          else
            echo "No changes in specified directories."
            exit 1

      - name: Build, tag, and push the image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
          IMAGE_TAG: ${{ steps.get-commit-hash.outputs.commit-hash }}-${{ steps.get-timestamp.outputs.timestamp }}
        working-directory: ${{ env.directory }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

